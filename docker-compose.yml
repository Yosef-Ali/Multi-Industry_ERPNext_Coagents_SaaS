version: '3.8'

services:
  # Python Workflow Service
  workflow-service:
    build:
      context: ./services/workflows
      dockerfile: Dockerfile
    container_name: erpnext-workflows
    ports:
      - "8001:8001"
    environment:
      - PYTHONUNBUFFERED=1
      - DATABASE_URL=${DATABASE_URL:-}
      - REDIS_URL=${REDIS_URL:-}
    volumes:
      - ./services/workflows/src:/app/src
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
    networks:
      - erpnext-network

  # TypeScript Agent Gateway
  agent-gateway:
    build:
      context: ./services/agent-gateway
      dockerfile: Dockerfile
    container_name: erpnext-agent-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - WORKFLOW_SERVICE_URL=http://workflow-service:8001
    volumes:
      - ./services/agent-gateway/src:/app/src
    depends_on:
      workflow-service:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - erpnext-network

  # Frontend (optional)
  # frontend:
  #   build:
  #     context: ./frontend/coagent
  #     dockerfile: Dockerfile
  #   container_name: erpnext-frontend
  #   ports:
  #     - "5173:5173"
  #   environment:
  #     - VITE_API_URL=http://localhost:3000
  #   depends_on:
  #     - agent-gateway
  #   restart: unless-stopped
  #   networks:
  #     - erpnext-network

  # PostgreSQL (optional - for production persistence)
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: erpnext-postgres
  #   ports:
  #     - "5432:5432"
  #   environment:
  #     - POSTGRES_USER=erpnext
  #     - POSTGRES_PASSWORD=erpnext
  #     - POSTGRES_DB=erpnext_workflows
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   restart: unless-stopped
  #   networks:
  #     - erpnext-network

  # Redis (optional - for session management)
  # redis:
  #   image: redis:7-alpine
  #   container_name: erpnext-redis
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   networks:
  #     - erpnext-network

networks:
  erpnext-network:
    driver: bridge

# volumes:
#   postgres_data:
